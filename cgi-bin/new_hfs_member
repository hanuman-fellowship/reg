#!/usr/bin/env perl
use strict;
use warnings;
use lib '.', '../lib';
use Util qw/
    db_init
    get_string
/;
my $c = db_init();

use CGI;
my $q = CGI->new();
my %form = $q->Vars();
use Template;
my $tt = Template->new(
    INTERPOLATE => 1,
);
# cookie info from a registration
my %cookie = $q->cookie(
    -domain => '.mountmadonna.org',
    -name   => 'user_data',
);
use lib '.', '../lib';
use Stripe qw/
    stripe_payment
/;
my %stash;
if (! $form{first}) {
    for my $w (qw/
        first last sanskrit addr1 addr2
        city st_prov zip_post country
        cell
        email1
    /) {
        $stash{$w} = $cookie{$w} || "";
    }
    # show the initial page describing the
    # mission, benefits, and costs.
    #
    for my $k (qw/
        mem_gen_amt
        mem_gen_ky_amt
        mem_spons_year
        mem_life_total
    /) {
        $stash{$k} = get_string($c, $k);
    }
    print $q->header();
    $tt->process(
        'new_hfs_member.tt2',
        \%stash,
    );
    exit;
}

# show verification page, prepare for the stripe_payment,
# and grab any photo they uploaded
%stash = %form;
my $type = $form{mem_type};
$stash{Mem_Type} = $type eq 'general' || $type eq 'sponsor'?
                       "\u$type Member"
                  : "General Member with Karma Yoga";
$stash{amount} = $type eq 'general'   ? get_string($c, 'mem_gen_amt')
                :$type eq 'general_ky'? get_string($c, 'mem_gen_ky_amt')
                :                       get_string($c, 'mem_spons_year')
                ;
$stash{desc} = "HFS \u$type membership"; 
# rename...
$stash{email} = $form{email1};

my $photo = $q->upload('photo');
if ($photo) {
    my $pic_name = $q->param('photo');
    # pic_name will be first_last.jpg (jpg or whatever type the file is)
    $pic_name =~ s{\A .*[.]([a-z]+) \z}{$form{first}_$form{last}.$1}xms;

    # Upgrade the handle to one compatible with IO::Handle:
    my $io = $photo->handle;
    open my $out, '>', "/tmp/pic$$";
    my $buffer;
    while (my $bytesread = $io->read($buffer, 1024)) {
        print {$out} $buffer;
    }
    close $out;

    my $dir = '/var/www/src/root/static/images';
    system("/usr/bin/convert /tmp/pic$$ -resize 800x $dir/$pic_name");
    unlink "/tmp/pic$$";
    $stash{pic} = $pic_name;
}

$stash{stripe_payment} = stripe_payment(
    name        => "$form{first} $form{last}",
    description => "HFS $stash{Mem_Type} Membership",
    amount      => $stash{amount},
    metadata    => \%stash,
    email       => $form{email1},
);

# get ready to send a cookie for storage
%cookie = %form;
delete $cookie{intro};
delete $cookie{mem_type};
delete $cookie{ky};
my $cookie = $q->cookie(
    -name    => 'user_data',
    -value   => \%cookie,
    -expires => '+10y',     # i.e. don't expire
    -domain  => '.mountmadonna.org',
);
print $q->header(-cookie => $cookie);
$tt->process(
    'new_hfs_member2.tt2',
    \%stash,
);
