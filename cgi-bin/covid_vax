#!/usr/bin/env perl
use strict;
use warnings;
use lib '../lib';
use Util qw/
    db_init
    model
    email_letter
    JON
    get_string
    styled
    check_read_only
/;
check_read_only();

use CGI;
my $q = CGI->new();
print $q->header();

my $href = $q->Vars();
use Template;
my $tt = Template->new(
    INTERPOLATE => 1,
);
my $c = db_init();
if ($href->{name}) {
    # show the initial page
    $tt->process(
        styled('covid_vax.tt2'),
        $href,
    );
    exit;
}
eval {
my $person = model($c, 'Person')->find($href->{person_id});
if (! $person) {
    $tt->process(
        styled('err.tt2'),
        { err => "Cannot find person with id $href->{person_id}" },
    );
    exit;
}
my $card = $q->upload('card');
if (! $card) {
    $tt->process(
        styled('err.tt2'),
        { err => "Missing Covid Vaccination card" },
    );
    exit;
}
my $fname = $q->param('card');
my ($suffix) = $fname =~ m{[.](\w+)\z}xms;
$suffix ||= "jpg";
$suffix = lc $suffix;
$suffix = "jpg" if $suffix eq 'jpeg';
if ($suffix !~ m{\A (jpg|png|gif|pdf) \z}xms) {
    $tt->process(
        styled('err.tt2'),
        {
            err => "The vaccination card picture must be a"
                 . " proper image file.<br>"
                 . "The suffix must be jpg, png, gif, or pdf.",
        },
    );
    exit;
}

# Upgrade the handle to one compatible with IO::Handle:
my $io = $card->handle;
my $cov_dir = '/var/Reg/documents/covid_vax';
my $name = $person->first . '_' . $person->last;
$name =~ s{[ ]}{_}xmsg;
my $cov_file = "$cov_dir/$name.$suffix";
my $out;
if (! open $out, '>', $cov_file) {
    $tt->process(
        styled('err.tt2'),
        {
            err => "Could not open $cov_file",
        },
    );
    exit;
}
my $buffer;
while (my $bytesread = $io->read($buffer, 1024)) {
    print {$out} $buffer;
}
close $out;
# 
if ($suffix eq 'jpg') {
    system "/usr/bin/convert -resize 1000x $cov_file /tmp/card$$";
    system "/usr/bin/convert -strip -interlace Plane -quality 65%"
         . " /tmp/card$$ $cov_file";
    unlink "/tmp/card$$";
}
elsif ($suffix eq 'pdf') {
    # convert to a jpg and resize/compress it
    # couldn't do this on mountmadonna.org or
    # here with ImageMagic version 6.
    # we installed pdftoppm and it does work okay
    #
    my $new = $cov_file;
    $new =~ s{.pdf}{}xms;
    system "/usr/bin/pdftoppm $cov_file $new -jpeg -f 1 -singlefile";
        # the above added .jpg to $new
    $new .= ".jpg";

    # resizing and compressing
    my $tmp = "/tmp/card$$";
    system "/usr/bin/convert -resize 1000x $new $tmp";
    system "/usr/bin/convert -strip -interlace Plane -quality 65%"
         . " $tmp $new";
    chmod 0666, $new;       # so it can be rotated
    unlink $tmp;
    $cov_file = $new;
    # we leave the .pdf there? sure.
}
$cov_file =~ s{.*/}{}xms;
$person->update({
    covid_vax => $cov_file,
    vax_okay  => '',     # to be verified
});
my $person_name = $person->name;
$person_name = "<a target=_blank href='https://akash.mountmadonna.org"
               . "/person/view_covid/$href->{person_id}'>"
               . "$person_name</a>"
               ;
email_letter($c,
    to      => get_string('covid_notify'),
    from    => 'Mount Madonna Center <programs@mountmadonna.org>',
    subject => 'COVID-19 Vaccination Card',
    html    => "Got COVID-19 vaccination card for $person_name",
    activity_msg => "Received COVID-19 Vaccination card for $person_name.",
);
};  if ($@) { JON "error: $@" }
$tt->process(
    styled('covid_thanks.tt2'),
);
