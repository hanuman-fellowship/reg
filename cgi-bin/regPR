#!/usr/bin/env perl
use strict;
use warnings;
use lib '../lib';
use Util qw/
    db_init
    model
    styled
    check_read_only
/;
check_read_only();

use Template;
use Date::Simple qw/
    today
/;
print "Content-Type: text/html; charset=ISO-8859-1\n\n";
my $c = db_init();
my %stash;
my $today = today();
my $start = $today + 2;
my $end = $today + 90;
$stash{startDate} = $start->format("%m/%d/%Y");
$stash{endDate} = $end->format("%m/%d/%Y");
my (@events) = model($c, 'Event')->search(
    {
        name  => { 'regexp' => '[[:<:]]No[[:>:]].*[[:<:]]PRs?[[:>:]]' },
        sdate => { '<='   => $end->as_d8() },
        edate => { '>='   => $today->as_d8() },
    },
    {
        order_by => 'sdate',
    }
);
my @disabled;
my (@noPR, @noPRindoors);
for my $ev (@events) {
    my ($sdate, $edate) = ($ev->sdate_obj, $ev->edate_obj);
    my ($indoors)       = $ev->name =~ m{indoors}xmsi;
    my $s;
    if ($sdate->month() == $edate->month()) {
        if ($sdate->day() == $edate->day()) {
            $s = $sdate->format("%B %e '%q");
        }
        else {
            # sometimes %e has an undesireable leading space
            my $t = $edate->format("%e '%q");
            $t =~ s{\A \s*}{}xms;
            $s = $sdate->format("%B %e")
               . "-"
               . $t
               ;
        }
    }
    else {
        $s = $sdate->format("%B %e '%q")
             .  " - "
             . $edate->format("%B %e '%q")
             ;
    }
    if ($indoors) {
        push @noPRindoors, $s;
    }
    else {
        push @noPR, $s;
        for (my $d = $sdate; $d <= $edate; ++$d) {
            push @disabled, $d->format("%m/%d/%Y");
        }
    }
}
$stash{noPR} = \@noPR;
$stash{noPRindoors} = \@noPRindoors;
$stash{disabled} = join ', ', map { qq!'$_'! } @disabled;

Template->new(
    INTERPOLATE => 1,
)->process(
    styled('regpr.tt2'),
    \%stash,
);
