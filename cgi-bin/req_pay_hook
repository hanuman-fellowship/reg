#!/usr/bin/env perl
use strict;
use warnings;
use CGI;
my $q = CGI->new();
print $q->header();
use lib '.', '../lib';
use Template;
use Stripe qw/
    metadata
/;
use Util qw/
    db_init
    model
    add_activity
    commify
/;
my $c = db_init();
use Date::Simple qw/
    today
/;
use Time::Simple qw/
    get_time
/;
my $today_d8 = today()->as_d8();
my $now_t24 = get_time()->t24();

my %P = metadata($q);
my $code = $P{code};
#$code = 'tytzzq';
my $fname = "/var/Reg/req_mmc_sent/$code";
if (! -f $fname) {
    print "no file $fname!";
    exit;
}
my $href = do $fname;
my %hash = %$href;
#
# this hash contains keys:
#    py_desc
#       which has multiple ~ separated fields
#       which are | separated fields of
#           amount, note, glnum
#    code
#    reg_id
#    person_id
#    total
#    first
#    last
#    program
#    signed   (unused here)
#    quest_email   (unused here)
#
# - create RegPayment records with the above
# - clear requested payments with the code
# - adjust the balance in the registration
# - log it
#
my $npy = 0;
for my $py (split m{~}, $hash{py_desc}) {
    ++$npy;
    my ($amount, $note, $glnum) = split m{\|}, $py;
    $amount =~ s{,}{}xmsg;
    model($c, 'RegPayment')->create({
        reg_id   => $hash{reg_id},
        type     => 'O',       # online
        amount   => $amount,
        what     => $note,
        the_date => $today_d8,
        time     => $now_t24,
        user_id  => 0,     # no user - this is a script
    });
}
# remove all requests with the code
my @req_py = model($c, 'RequestedPayment')->search({
    code => $code,
});
if ($npy != @req_py) {
    add_activity($c, "**** some mismatch with req_pay - "
       ."reg_id $hash{reg_id} npy $npy != " . scalar(@req_py));
}
else {
    for my $py (@req_py) {
        $py->delete();
    }
}

# History record
model($c, 'RegHistory')->create({
    reg_id   => $hash{reg_id},
    the_date => $today_d8,
    time     => $now_t24,
    user_id  => 0,
    what     => "Got requested payment of \$" . commify($hash{total}) . '.',
});

# adjust the balance
model($c, 'Registration')->find($hash{reg_id})->update({
    balance => \"balance - $hash{total}",
});
# notify someone that the payment was made!???
add_activity($c, "requested payment totaling \$$hash{total}"
               . " for <a target=_blank "
               . "href='/registration/view/$hash{reg_id}'>"
               . "$hash{first} $hash{last}</a>");

Template->new(INTERPOLATE => 1)->process(
    'req_pay_message.tt2',
    {
        first   => $hash{first},
        program => $hash{program},
    }
);
