#!/usr/bin/perl
#
# maybe send $data as the stash hash ref?
#

use strict;
use warnings;
use lib 'lib';
use Template;
use CGI qw/:standard/;
print header;
use CGI::Carp qw/fatalsToBrowser/;

use HousingNames;
use Date::Simple qw/
    date
/;
use Time::Simple qw/
    get_time 
/;

#
# command line params
#
my $test = param('test') || 0;
my $dir  = param('dir');
my $pid  = param('id');

my $progpath = "/home/mmc/www/" . ($dir ? $dir:
                                   $test? "staging":
                                          "live");

=comment

reg1 takes a program id on the command line.
it looks it up in the regtable to get the 
various attributes of a program with that id.
it then fills in reg1.tt2 with
these various attributes and presents
it to the user.

if there is cookie information, it will also be used.

=cut

my $href = do "$progpath/progtable";
if ($@) {
    print "error in progtable: $@\n";
    exit;
}
if (! exists $href->{$pid}) {
    print "Sorry, program not found.\n";
    exit;
}
my $data = $href->{$pid};
my %cookie = cookie(-name => 'user_data');

# TODO: complain if you try to register for a program that has already happened.

my %stash;
$stash{test} = $test;
$stash{dir}  = $dir;
$stash{pid}  = $pid;
for my $w (qw/
    title dates leader_names name
    canpol do_not_compute_costs dncc_why
    plink deposit
/) {
    $stash{$w} = $data->{$w};
}
for my $t (qw/
    reg_start
    reg_end
    prog_start
    prog_end
/) {
    $stash{$t} = get_time($data->{$t})->ampm();
}
$stash{pr} = $data->{title} =~ m{personal\s+retreat}i;
if ($test) {
    for my $i (1, 2) {
        $data->{"image$i"} =~ s{live}{staging};
    }
}
if ($data->{image1} && $data->{image2}) {
    $stash{two_pics} = 1;
    $stash{image1} = $data->{image1};
    $stash{image2} = $data->{image2};
}
elsif ($data->{image1}) {
    $stash{one_pic} = 1;
    $stash{image1} = $data->{image1};
}
else {
    $stash{zero_pics} = 1;
}

#
# an exception for personal retreats
#
if ($stash{pr}) {
    $stash{dates} = "";
    $stash{leader_names} = "";
    my $noPRfile = "../personal/noPR.txt";
    if (-r $noPRfile) {
        my $noPR = "";
        open my $in, "<", $noPRfile;
        while (my $line = <$in>) {
            chomp $line;
            my ($sdate, $edate) = split m{-}, $line;
            $sdate = date($sdate);
            $edate = date($edate)-1;
            if ($sdate->month() == $edate->month()) {
                $noPR .= $sdate->format("%B %e") . "-" . $edate->format("%e");
            }
            else {
                $noPR .= $sdate->format("%B %e"). "-" . $edate->format("%B %e");
            }
            $noPR .= ", ";
        }
        close $in;
        $noPR =~ s{, $}{};
        $stash{noPR} = $noPR;
    }
}
$stash{basicfull} = ($data->{ndays} != $data->{fulldays});
$stash{bdays}     = $data->{ndays};
$stash{fdays}     = $data->{fulldays};
if ($stash{basicfull}) {
    # muck with the dates
    ($stash{bdates}, $stash{fdates}) = split m{,}, $data->{dates};
    if ($stash{fdates} =~ m{^\s*\d}) {
        my ($month) = $stash{bdates} =~ m{([a-z]+)}i;
        $stash{fdates} = "$month " . $stash{fdates};
    }
}

if ($cookie{gender} eq "male") {
    $stash{male} = "checked";
    $stash{female}   = "";
}
else {
    $stash{female} = "checked";
    $stash{male}   = "";
}
if ($cookie{cabin_room} eq 'cabin') {
    $stash{cabin} = "checked";
    $stash{room}  = "";
}
else {
    $stash{cabin} = "";
    $stash{room}  = "checked";
}
# Carpooling
$stash{carpool}        = $cookie{carpool}? 'checked': '';
$stash{hascar}         = $cookie{hascar}? 'checked': '';
my $fw = $cookie{from_where};
if ($fw eq 'SJC') {
    $stash{sjc_checked} = 'checked';
}
elsif ($fw eq 'SFO') {
    $stash{sfo_checked} = 'checked';
}
else {
    $stash{home_checked} = 'checked';
}
$stash{from_where_display} = $stash{carpool}? 'block': 'none';

$stash{e_mailings}     = $cookie{e_mailings}? 'checked': '';
$stash{snail_mailings} = $cookie{snail_mailings}? 'checked': '';
$stash{mmi_e_mailings} = $cookie{mmi_e_mailings}? 'checked': '';
$stash{mmi_snail_mailings} = $cookie{mmi_snail_mailings}? 'checked': '';
$stash{share_mailings} = $cookie{share_mailings}? 'checked': '';
$stash{withwhom_first} = $cookie{withwhom_first} || "";
$stash{withwhom_last}  = $cookie{withwhom_last}  || "";
for my $w (qw/
    fname lname street1 street2
    city state zip country
    home work cell
    email1
/) {
    $stash{$w} = $cookie{$w} || "";
}
$stash{email2} = $cookie{email1} || "";

$stash{mft} = $data->{footnotes} =~ m{[*][*]};
$stash{ceu} = $data->{footnotes} =~ m{[*]};
$stash{ceu_license} = $cookie{ceu_license};

# housing
#
my @housekeys = grep { /^basic / } keys %$data;

if (exists $data->{next_hc} && $data->{next_hc}) {
    $stash{next_hc} = $data->{next_hc};
    $stash{through_date} = date($data->{next_date})->prev->format("%b %e");
    $stash{next_date} = date($data->{next_date})->format("%b %e");
}
my $housing_fees = "";
for my $k (sort { $data->{$a} <=> $data->{$b} } @housekeys) {
    my $nk = $k;
    $nk =~ s{basic }{};
    my $full = $k;
    $full =~ s{basic}{full};
    my $next = $k;
    $next =~ s{basic}{next};
    my $select1 = $cookie{house1} eq $nk? 'checked': '';
    my $select2 = $cookie{house2} eq $nk? 'checked': '';
    $housing_fees .= <<"EOH";
<tr>

<td style="text-align: center">
<input type=radio name=house1 value='$nk' $select1>
</td>

<td style="text-align: center">
<input type=radio name=house2 value='$nk' $select2>
</td>

<td>$housing_name{$nk}</td>
EOH
    if (! $stash{do_not_compute_costs}) {
        $housing_fees .= "<td align=right width=50>\$$data->{$k}</td>\n";
        if ($stash{basicfull}) {
            $housing_fees .= "<td align=right width=70>\$$data->{$full}</td>\n";
        }
        elsif ($data->{next_hc}) {
            $housing_fees .= "<td align=right width=70>\$$data->{$next}</td>\n";
        }
    }
    $housing_fees .= "</tr>\n";
}
$stash{housing_fees} = $housing_fees;

Template->new(
    INTERPOLATE => 1,
)->process(
    "reg1.tt2",
    \%stash,
);
