#!/usr/bin/env perl
use strict;
use warnings;

use lib 'lib';
use Util qw/
    model
    db_init
/;
use RetreatCenterDB;    # ??? why can't we move this to Util?
use Global qw/
    %string
/;
use Net::FTP;

my $c = db_init();
Global->init($c, 1, 1);

#
# omp = Online Membership Payment
#
my $omp;
my $omp_fname = "omp.sql";
sub omp_init {
    open $omp, '>', "/tmp/$omp_fname" or die "cannot open $omp_fname: $!\n";
    print {$omp} <<'EOS';
drop table if exists omp;
create table omp (
    secure_code text,
    first text,
    last text,
    addr1 text,
    addr2 text,
    city text,
    st_prov text,
    zip_post text,
    country text,
    email text,
    phone text,
    person_id integer,
    member_id integer,
    category text,
    amount_due integer,
    total_paid integer,
    date_payment text,
    last_amount integer,
    general text
);
EOS
}
sub omp_add {
    my ($c, $mem) = @_;
    my $per = $mem->person;
    my @payments = model($c, 'SponsHist')->search(
                       {
                           member_id => $mem->id,
                       },
                       { order_by => "date_payment desc" },
                   );
    my ($date_payment, $last_amount, $general) = ('', 0, '');
    if (@payments) {
        $date_payment = $payments[0]->date_payment;
        $last_amount = $payments[0]->amount;
        $general = $payments[0]->general;
            # the above is not really needed, I don't think
    }
    my $amount_due = $mem->category eq 'General'? $string{mem_gen_amt}
                    :                             $string{mem_spons_year}
                    ;
    print {$omp} "insert into omp values ("
                 . join(', ',
                        quote($per->secure_code),
                        quote($per->first),
                        quote($per->last),
                        quote($per->addr1),
                        quote($per->addr2),
                        quote($per->city),
                        quote($per->st_prov),
                        quote($per->zip_post),
                        quote($per->country),
                        quote($per->email),
                        quote($per->tel_home || $per->tel_cell || ''),
                        $per->id,
                        $mem->id,
                        quote($mem->category),
                        $amount_due,
                        $mem->total_paid,
                        $date_payment || 20000101,
                        $last_amount,
                        quote($general),
                   )
                 . ");\n";
                 ;
}
sub omp_send_and_load {
    close $omp;
    my $ftp = Net::FTP->new($string{ftp_site},
                            Passive => $string{ftp_passive})
        or return "no Net::FTP->new";
    $ftp->login($string{ftp_login}, $string{ftp_password})
        or return "no login";
    # thanks to jnap and haarg
    # a nice HACK to force Extended Passive Mode:
    no warnings 'redefine';
    local *Net::FTP::pasv = \&Net::FTP::epsv;
    $ftp->cwd($string{ftp_omp_dir})
        or return "no cd";
    $ftp->ascii()
        or return "no ascii";
    $ftp->put("/tmp/$omp_fname", $omp_fname)
        or return "no put";
    $ftp->quit();
    my $output = `curl $string{omp_load_url}`;
    if ($output !~ m{done}) {
        return "no load: $output";
    }
    unlink "/tmp/$omp_fname";
    return "successfully pushed";
}
sub quote {
    my ($s) = @_;
    $s = "" if ! defined $s;
    return qq{"$s"};
}

omp_init();
for my $m (model($c, 'Member')->all()) {
    omp_add($c, $m);
}
print omp_send_and_load(), "\n";
