#!/usr/bin/perl
use strict;
use warnings;
use DBI;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Date::Simple qw/
    today
    date
/;
chdir "$FindBin::Bin/..";

my $cur_date = (shift || today()->as_d8())
    or die "gather_made yyyymmdd\n";

my $cur_date1 = (date($cur_date) - 1)->as_d8();

my $dbh = DBI->connect(undef, "sahadev", "JonB")
    or die "oh no\n";

my %already = ();
my $get_sth = $dbh->prepare("
    select house_id
    from make_up;
");
$get_sth->execute();
while (my ($id) = $get_sth->fetchrow_array()) {
    $already{$id} = 1;
}

my @house_ids;

# we use 'distinct' below because more than one
# registration might be vacating the room on $cur_date.
# the corresponding config record end date is actually
# one day before since we reserve nights not days.
#
my $getreg_sth = $dbh->prepare("
    select distinct house_id
    from registration
    where house_id != 0
      and date_end = $cur_date
");
$getreg_sth->execute();
while (my ($house_id) = $getreg_sth->fetchrow_array()) {
    push @house_ids, $house_id;
}

# rentals reserve the entire room.
# the last night is a day before the cur_date.
#
my $getrental_sth = $dbh->prepare("
    select house_id
    from rental_booking
    where date_end = $cur_date1
");
$getrental_sth->execute();
while (my ($house_id) = $getrental_sth->fetchrow_array()) {
    push @house_ids, $house_id;
}

#
# blocks
#
my $getblock_sth = $dbh->prepare("
    select distinct house_id
    from block
    where npeople != 0
      and edate = $cur_date
      and allocated = 'yes'
");
$getblock_sth->execute();
while (my ($house_id) = $getblock_sth->fetchrow_array()) {
    push @house_ids, $house_id;
}

#
# a block and a registration might leave on the same
# day - so eliminate dups.
#
my %seen = ();
@house_ids = grep { !$seen{$_}++ } @house_ids;

my $ins_sth = $dbh->prepare("
    insert into make_up (
        house_id, date_vacated, date_needed, refresh
    )
    values (
        ?, ?, ?, ?
    );
");
# can I combine these sql statments?
# not sure.  the same column name 'date_start'
# in the two tables makes for confusion.
# so ...
# and now we have blocks - sdate
#
my $nextreg_sth = $dbh->prepare("
    select date_start
    from registration
    where house_id = ? and date_end > $cur_date
    order by date_start
    limit 1
");
my $nextblock_sth = $dbh->prepare("
    select sdate
    from block
    where house_id = ? and edate > $cur_date
    order by sdate
    limit 1
");
my $nextrental_sth = $dbh->prepare("
    select date_start
    from rental_booking
    where house_id = ? and date_end > $cur_date
    order by date_start
    limit 1
");

# eliminate the ones already there in the make up list.
# adding the new ones while you're at it.
#
@house_ids = grep { !$already{$_}++ } @house_ids;

my ($next, $next_reg_date, $next_rental_date, $next_block_date);
for my $house_id (@house_ids) {

    # when is this house next needed?
    # ??? Better - search the config records ???
    # maybe not - if two in room, one leaves...
    #
    $next = '';
    $nextreg_sth->execute($house_id);
    ($next_reg_date) = $nextreg_sth->fetchrow_array();
    if ($next_reg_date) {
        $next = $next_reg_date;
    }

    $nextblock_sth->execute($house_id);
    ($next_block_date) = $nextblock_sth->fetchrow_array();
    if ($next_block_date && $next && $next_block_date < $next) {
        $next = $next_block_date;
    }

    $nextrental_sth->execute($house_id);
    ($next_rental_date) = $nextrental_sth->fetchrow_array();
    if ($next_rental_date && $next && $next_rental_date < $next) {
        $next = $next_rental_date;
    }

    if ($next && $next < $cur_date) {
        # this could happen since we're taking the date_start
        # where the date_end > cur_date.
        #
        $next = $cur_date;
    }

    $ins_sth->execute($house_id, $cur_date, $next, '');
}
#
# look for programs/rentals which are happening now
# for which this day is a refresh room day.
# all houses reserved by those programs/rentals need
# to be refreshed.
#

# Rentals
#
my $r_rental_sth = $dbh->prepare("
    select id, sdate, refresh_days
    from rental
    where sdate <= $cur_date and $cur_date <= edate
      and refresh_days != ''
");
# find all rental_bookings for a rental
# they all need refreshing.
#
my $rb_sth = $dbh->prepare("
    select house_id
      from rental_booking
     where rental_id = ?
");
$r_rental_sth->execute();
RENTAL:
while (my ($r_id, $sdate, $refresh_days) = $r_rental_sth->fetchrow_array()) {
    my $r = substr($refresh_days, date($cur_date)-date($sdate), 1);
    next RENTAL unless $r;
    $rb_sth->execute($r_id);
    while (my ($h_id) = $rb_sth->fetchrow_array()) {
        if (! exists $already{$h_id}) {
            $ins_sth->execute($h_id, $cur_date, $cur_date, 'yes');
        }
    }
}

# Programs
#
my $r_program_sth = $dbh->prepare("
    select id, sdate, refresh_days
    from program
    where sdate <= $cur_date and $cur_date <= edate
      and refresh_days != ''
");
# find all registrations for this program which have
# housing and which are here on this day.
# the houses all need refreshing.
#
my $reg_sth = $dbh->prepare("
    select house_id
      from registration
     where program_id = ?
       and house_id != 0
       and date_start <= $cur_date
       and $cur_date  <= date_end
");
$r_program_sth->execute();
PROGRAM:
while (my ($p_id, $sdate, $refresh_days) = $r_program_sth->fetchrow_array()) {
    my $r = substr($refresh_days, date($cur_date)-date($sdate), 1);
    next PROGRAM unless $r;
    $reg_sth->execute($p_id);
    while (my ($h_id) = $reg_sth->fetchrow_array()) {
        if (! exists $already{$h_id}) {
            $ins_sth->execute($h_id, $cur_date, $cur_date, 'yes');
        }
    }
}

__END__
one person in room
    - a reg is next use
    - a rental is the next use
two people in room
    - both leave the same day (i.e. same as case above)
        - a reg is next use
        - a rental is the next use
    - only one leaves.   the room should be made up right away
        for the comfort of the remaining person who leaves
        a few days later.
