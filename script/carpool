#!/usr/bin/env perl
use strict;
use warnings;

use lib "lib";
use RetreatCenterDB;
use Util qw/
    model
    db_init
    email_letter
/;
my $c = db_init();
use Global qw/
    %string
/;
Global->init($c, 1, 1);

use Date::Simple qw/
    today
    date
/;

my ($cmdline_date, $offset) = @ARGV;
if ($cmdline_date && $cmdline_date eq '-') {
    $cmdline_date = "";
}
if (!defined $offset) {
    $offset = 7;
}

my $cur_date = $cmdline_date || today()->as_d8();

my $cur_date_off = (date($cur_date) + $offset)->as_d8();

my @progs = model($c, 'Program')->search(
    {
        sdate => $cur_date_off,
        name  => { -not_like => '%personal_retreat%' },
    },
);
if (! @progs) {
    exit;
}

#
# now find people in those programs who
# requested a carpool list.
#
for my $prog (@progs) {
    my $let = "";
    $let .= "<h3>Car Pool List for " .  $prog->name . " from "
         .  short_dates($prog->sdate_obj, $prog->edate_obj, $prog->extradays)
         .  "</h3><ul>\n"
         ;
    my @regs = model($c, 'Registration')->search(
                   {
                       program_id => $prog->id,    
                       carpool    => 'yes',
                       cancelled  => { '!=' => 'yes' },
                   },
                   {
                       join => qw/ person /,
                       order_by => 'zip_post',
                   },
               );
    my (@emails, @no_emails);
    for my $r (@regs) {
        my $per = $r->person;
        my $first = $per->first;
        my $last  = $per->last;
        my $email = $per->email;
        $let .= "$first $last";
        if ($r->hascar) {
            $let .= " - HAS CAR"
        }
        $let .= "<br>\n";
        if ($r->from_where eq 'Home') {
            $let .= $per->city
                  . ', '
                  . $per->st_prov
                  .   ' '
                  .  $per->zip_post
                  . "<br>\n";
            if ($per->country) {
                $let .= $per->country . "<br>\n";
            }
        }
        elsif ($r->from_where) {
            $let .= "From the " . $r->from_where . " airport.<br>\n";
        }
        if ($email) {
            $let .= "<a href='mailto:$email'>$email</a><br>\n";
            push @emails, $email;
        }
        else {
            push @no_emails, [ $first, $last, $per->addr1, $per->addr2,
                               $per->city, $per->st_prov, $per->zip_post,
                               $per->country
                             ];
        }
        TEL:
        for my $tel (qw/ tel_home tel_work tel_cell /) {
            if ($per->$tel) {
                $let .= $per->$tel;
                last TEL;
            }
        }
        $let .= "<p>\n";
    }
    if (@emails) {
        email_letter($c,
            from    => "$string{from_title} <$string{from}>",
            to      => (join ", ", @emails),
            cc      => 'POStaff@mountmadonna.org, jon.bjornstad@gmail.com';
            subject => "Carpool List for " . $prog->name,
            html    => $let,
        );
    }
    if (@no_emails) {
        my $n_no_emails = @no_emails;
        my $copies = $n_no_emails > 1? 'copies': 'copy';
        my $let = "The following people do not have an email address<br>\n"
                . "and need to be snail mailed the car pool list"
                . " for " . $prog->name . ".<p>"
                . "Click <a href='http://localhost:3000/registration/carpool/"
                .  $prog->id . "'>here</a> and"
                . " then print $n_no_emails $copies.<p>";
        for my $p (@no_emails) {
            my ($first, $last, $addr1, $addr2,
                $city, $state, $zip, $country) = @$p;
            $let .= "$first $last<br>\n"
                 .  "$addr1<br>";
            if ($addr2) {
                $let .= "$addr2<br>\n";
            }
            $let .= "$city, $state $zip<br>\n";
            if ($country) {
                $let .= "$country<br>\n";
            }
            $let .= "<p>\n";
        }
        $let .= "</ul>\n";
        email_letter($c,
            from    => "$string{from_title} <$string{from}>",
            to      => 'POStaff@mountmadonna.org, jon.bjornstad@gmail.com',
            subject => "Snail Mail People - Carpool List for " . $prog->name,
            html    => $let,
        );
    }
}

sub short_dates {
    my ($sd, $ed, $extra) = @_;

    my $dates = $sd->format("%B %e");
    if ($sd->month == $ed->month) {
        $dates .= "-" . $ed->format("%e");
    }
    else {
        $dates .= " - " . $ed->format("%B %e");
    }
    if ($extra) {
        $ed += $extra;
        if ($ed->month == $sd->month) {
            $dates .= ", " . $sd->day . "-";
            $dates .= $ed->day;
        } else {
            $dates .= ", " . $sd->format("%B %e") . " - ";
            $dates .= $ed->format("%B %e");
        }
    }
    $dates;
}
