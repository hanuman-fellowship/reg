#!/usr/bin/perl
use strict;
use warnings;

=comment

It is now just after midnight.
Assign $dayname the 3 letter name of yesterday.
Assign $daynum the day number of yesterday.
The current directory is /home/sahadev/Reg
The files grid.$dayname.gz, rc.$daynum.gz
have just been transfered to the offsite backup machine.
Check that they made it there properly and 
send Sahadev email about the status.
A minimalistic simple byte count check is the best we can do.

=cut

use FindBin;
use lib "$FindBin::Bin/../lib";
use Date::Simple qw/
    today
/;

my $day = today()->prev();
my $dayname = $day->format("%a");
my $daynum  = sprintf "%02d", $day->day();
my $full_dayname = $day->format("%A");

my %local_size;
$local_size{grid} = (-s "backup/grid.$dayname.gz") || 0;
$local_size{rc}   = (-s "backup/rc.$daynum.gz") || 0;

my %remote_size;

use Net::FTP;
my $ftp = Net::FTP->new('logicalpoetry.com');
$ftp->login('logicalpoetr', 'bx42rg86');
$ftp->cwd('backup/mmc');
my $msg = "";
my $err = 0;
$remote_size{grid} = $ftp->size("grid.$dayname.gz");
$remote_size{rc}   = $ftp->size("rc.$daynum.gz");
for my $name (qw/  grid  rc  /) {
    if ($remote_size{$name} != $local_size{$name}) {
        $msg .= "$name backup failed:"
             .  " $remote_size{$name} != $local_size{$name}\n";
        $err = 1;
    }
}
if (! $msg) {
    $msg = "All went well with the backup on $full_dayname.\n";
}

#
# we need some values from the database
# to know how to send email.
#
use DBI;

my $dbh = DBI->connect(undef, "sahadev", "JonB")
    or die("oh no DBI");
my $sth = $dbh->prepare("
    select the_key, value
    from string
    where the_key like 'smtp_%'
");
$sth->execute();
my %string;
while (my ($the_key, $value) = $sth->fetchrow_array()) {
    $string{$the_key} = $value;
}

# 
# get ready to send email
#
use Mail::Sender;
sub email_letter {
    my (%args) = @_;

    my @auth = ();
    if ($string{smtp_auth}) {
        @auth = (
            auth    => $string{smtp_auth},
            authid  => $string{smtp_user},
            authpwd => $string{smtp_pass},
        );
    }
    my $mail_sender = Mail::Sender->new({
        smtp => $string{smtp_server},
        port => $string{smtp_port},
        @auth,
    }) or die("no mail sender");
    $mail_sender->Open({
        to       => $args{to},
        from     => $args{from},
        subject  => $args{subject},
    }) or die("no mail sender Open");
    $mail_sender->SendLineEnc($args{msg});
    $mail_sender->Close() or die("no mail sender Close");
}

email_letter(
    from => 'MMC Reservations <reservations@mountmadonna.org>',
      to => 'Jon Bjornstad <jon@logicalpoetry.com>',
 subject => ($err? "ALERT!  Faulty ": "") . "MMC Backup on $full_dayname",
     msg => $msg,
);
