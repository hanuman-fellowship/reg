#!/usr/bin/env perl
use strict;
use warnings;
use 5.10.0;
use lib 'lib';
use RetreatCenterDB;
use Util qw/
    db_init
    model
/;
use Date::Simple qw/
    date
/; 
use HTML::FormatText;

my $c = db_init();
my @names;
for my $w (qw/
    MMI
    Lad
    Shrestha
    Shanbag
    Ayurved
/) {
    push @names, 'me.name' => { -like => "%$w%" };
}
my @mmi_prog = model($c, 'Program')->search(
    {
        -and => [
          -or => \@names,
          -or => [
            -and => [
              'school.name' => { '!=' => 'MMC' },
              \[ "STR_TO_DATE(sdate, '%Y%m%d') > ?", '2007-01-01' ]
            ],
            \[ "STR_TO_DATE(sdate, '%Y%m%d') < ?", '2007-01-01' ],
          ], # end -or
        ],
    },
    {
        order_by => 'sdate desc',
        prefetch => ['school','summary', +{registrations => 'person'}],
    },
);

for my $prog (@mmi_prog) {
    my $d = date($prog->sdate);
    my $desc = HTML::FormatText->format_string($prog->summary->workshop_description//'');
    $desc =~ s/\n/ /g; # clean up a bit
    $desc = '' if($desc eq " "); #seems to be common so lets clean it out
    say join ', ', (grep { $_ } $prog->name(), $d, $desc);
    for my $reg ($prog->registrations()) {
        my $per  = $reg->person() || next;
        print "    ", $per->name, "\n";
    }
}

warn "Total found: $#mmi_prog";

__END__

Not clear this is correct to me :)
WHERE (
  (
    ( me.name LIKE ? OR me.name LIKE ? OR me.name LIKE ? OR me.name LIKE ? OR me.name LIKE ? ) 
    AND (
      ( school.name != ? AND STR_TO_DATE(sdate, '%Y%m%d') > ? ) 
      OR STR_TO_DATE(sdate, '%Y%m%d') < ? 
    ) 
  ) 
)

ORDER BY sdate desc: '%MMI%', '%Lad%', '%Shrestha%', '%Shanbag%', '%Ayurved%', 'MMC', '2007-01-01', '2007-01-01'

