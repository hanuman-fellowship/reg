#!/usr/local/bin/perl
use strict;
use warnings;
use lib 'lib';
use RetreatCenterDB;
use Global qw/
    %string
/;
use RegMail qw/
    email_letter
/;
use Date::Simple qw/
    date
    today
/;
use Template;
my $dir = 'root/static/templates/letter';
my $tt = Template->new({
    INCLUDE_PATH => $dir,
    INTERPOLATE  => 1,
    EVAL_PERL    => 0,
});

my $testing = 0;

open my $letter, '<', "$dir/faceyelp.tt2"
    or die "cannot open faceyelp.tt2: $!\n";
my $html;
{
    local $/;
    $html = <$letter>;
    close $letter;
}
my ($from_email) = $html =~ m{([\w.]+\@[\w.]+)}xms;
$from_email = "MMC Program Director <$from_email>";

my $date = shift || today()->as_d8();
my $day_before = date($date)->prev->as_d8();
my $schema = RetreatCenterDB->connect($ENV{DBI_DSN}, "sahadev", "JonB");
my $msg = "";
my $tot = 0;

# programs
#
my @programs = $schema->resultset('Program')->search({
    edate  => $day_before,
    school => 0, 
    name   => { -not_like => '%personal%retreat%' },
});
for my $pr (@programs) {
    my @leaders = $pr->leaders;
    my $leader_name;
    if (@leaders) {
        $leader_name = $leaders[0]->leader_name;
    }
    my $title = $pr->title;
    my $n = 0;
    REG:
    for my $reg ($pr->registrations) {
        next REG if $reg->leader_assistant;     # skip leaders & assistants
        next REG if $reg->cancelled;
        my $per = $reg->person;
        next REG if ! $per->email;

        my $html = "";
        my $stash = {
            program     => 1,
            first       => $per->first,
            title       => $title,
            leader_name => $leader_name,
        };
        $tt->process(
            "faceyelp.tt2",
            $stash,               # variables
            \$html,               # output
        ) or die "error in processing template: "
                 . $tt->error();
        email_letter(
            schema  => $schema,
            from    => $from_email,
            to      => $testing? 'jon@suecenter.org': $per->email,
            subject => "Your Time At Mount Madonna Center",
            html    => $html,
        );
        ++$n;
    }
    $msg .= "$n people for program $title<br>\n";
    $tot += $n;
}

# rentals
#
my @rentals = $schema->resultset('Rental')->search({
    edate => $day_before,
});
RENTAL:
for my $r (@rentals) {
    next RENTAL if $r->program_id;      # skip hybrid rentals
                                        # the program will suffice
    my $title = $r->name;
    $title =~ s{ \s* \d+/\d+ \s* \z }{}xms;    # chop mm/yy at the end
    my @people;
    if ($r->coordinator) {
        push @people, $r->coordinator;
    }
    if ($r->contract_signer) {
        push @people, $r->contract_signer;
    }
    if (@people == 2 && $people[0]->email eq $people[1]->email) {
        shift @people;
    }
    my $n = @people;
    $tot += $n;
    for my $per (@people) {
        my $html = "";
        my $stash = {
            program     => 0,
            first       => $per->first,
            title       => $title,
        };
        $tt->process(
            "faceyelp.tt2",
            $stash,               # variables
            \$html,               # output
        ) or die "error in processing template: "
                 . $tt->error();
        email_letter(
            schema  => $schema,
            from    => $from_email,
            to      => $testing? 'jon@suecenter.org': $per->email,
            subject => "Your Time At Mount Madonna Center",
            html    => $html,
        );
    }
    my $who = ($n == 1)? "person": "people";
    $msg .= "$n $who for rental $title<br>\n";
}

# personal retreatants
#
my @prog_pr = $schema->resultset('Program')->search({
    name => { -like => '%personal%retreat%' },
    sdate => { '<=' => $day_before },
    edate => { '>=' => $day_before },
});
if (@prog_pr) {
    my $pr_id = $prog_pr[0]->id();
    my @pers_retr = $schema->resultset('Registration')->search({
        program_id => $pr_id,
        date_end   => $day_before,
    });
    my $n = 0;
    REG:
    for my $reg (@pers_retr) {
        next REG if $reg->cancelled;
        my $per = $reg->person;
        next REG if ! $per->email;

        my $html = "";
        my $stash = {
            pr          => 1,
            first       => $per->first,
        };
        $tt->process(
            "faceyelp.tt2",
            $stash,               # variables
            \$html,               # output
        ) or die "error in processing template: "
                 . $tt->error();
        email_letter(
            schema  => $schema,
            from    => $from_email,
            to      => $testing? 'jon@suecenter.org': $per->email,
            subject => "Your Time At Mount Madonna Center",
            html    => $html,
        );
        ++$n;
    }
    my $pe = $n == 1? "person"
            :         "people"
            ;
    $msg .= "$n $pe for personal retreats<br>\n";
    $tot += $n;
}

exit;       # no need for mailings any more

if ($tot) {
    email_letter(
        schema  => $schema,
        from    => 'jonb@logicalpoetry.com',
        to      => 'jon@suecenter.org, brajesh@mountmadonna.org',
        subject => "Post-Event emailings",
        html    => $msg,
    );
}
email_letter(
    schema  => $schema,
    from    => 'jonb@logicalpoetry.com',
    to      => 'jon@suecenter.org',
    subject => "Post-Event emailings",
    html    => 'It did run!',
);
