#!/usr/bin/env perl
use strict;
use warnings;
use 5.10.0;
use lib 'lib';
use RetreatCenterDB;
use Util qw/
    db_init
    model
/;
use Date::Simple qw/
    date
/; 

my $c = db_init();

my @mmi_prog = model($c, 'Program')->search(
  {
    -or => [ # Either
      -and => [
        'me.sdate' => { '>' => '20070101' }, # the Date is after 2007 AND
        -or => [
          'me.name' => { -like => '%MMI%'}, 
          'me.school_id' => { '!=' => 1 },
        ], # name is like MMI OR the school_id is not 1 (not MMC)
      ], # OR
      -and => [
        'me.sdate' => { '<' => '20070101' }, # the Date is before 2007 AND
        -or => [
          'me.name' => { -like => '%Lad%'}, 
          'me.name' => { -like => '%Shrestha%'}, 
          'me.name' => { -like => '%Shanbag%'}, 
          'me.name' => { -like => '%Ayurved'}, 
        ], # The name is like at least one of these
      ],
    ],
  },
  {
    order_by => 'me.sdate desc',
    prefetch => [
      'summary', 
      +{ registrations => 'person' },
    ],
  },
);

say "Programs, dates and students.";

my %students;
for my $prog (@mmi_prog) {
  my $d = date($prog->sdate);
  say join ', ', (grep { $_ } $d, $prog->name(), $prog->title);
  for my $reg ($prog->registrations()) {
    my $per  = $reg->person() || next; #S kip if there's no one in the registration.
    say "\t", $per->name;
    push @{$students{$per->name}}, $prog->name;
  }
}

say "Students and all the programs attended.";

foreach my $student (sort keys %students) {
  say $student;
  foreach my $program (@{$students{$student}||[]}) {
    say "\t $program";
  }
}

my @consults = model($c, 'Program')->search(
  { 'me.name' => { -like => '%CONSULT%'} },
  { order_by => 'me.sdate DESC', 
    prefetch => ['summary', +{ registrations => 'person' }]
  }
);

say "Consults and who attended.";

for my $prog (@consults) {
  my $d = date($prog->sdate);
  say join ', ', (grep { $_ } $d, $prog->name(), $prog->title);
  for my $reg ($prog->registrations()) {
    my $per  = $reg->person() || next;
    say "\t", $per->name;
    push @{$students{$per->name}}, $prog->name;
  }
}

