drop table if exists program;
create table program (
    id          integer primary key autoincrement,
    name        text,
    title       text,
    subtitle    text,
    glnum       text,
    housecost_id integer,
    retreat     text,
    sdate       text,
    edate       text,
    tuition     integer,
    confnote    text,
    url         text,
    webdesc     text,
    brdesc      text,
    webready    text,
    image       text,
    kayakalpa   text,
    canpol_id   integer,
    extradays   integer,
    full_tuition integer,
    deposit     integer,
    collect_total text,
    linked      text,
    unlinked_dir text,
    ptemplate   text,
    cl_template text,
    sbath       text,
    quad        text,
    economy     text,
    footnotes   text,
    reg_start   text,
    reg_end     text,
    prog_start  text,
    prog_end    text,
    -- for regi:
    school      integer,
    level       text
);
drop table if exists canpol;
create table canpol (
    id integer primary key autoincrement,
    name   text,
    policy text
);
drop table if exists housecost;
create table housecost (
    id              integer primary key autoincrement,
    name            text,
    single_bath     integer,
    single          integer,
    double_bath     integer,
    dble            integer,
    triple          integer,
    quad            integer,
    dormitory       integer,
    economy         integer,
    center_tent     integer,
    own_tent        integer,
    own_van         integer,
    commuting       integer,
    unknown         integer,
    type            text
);
drop table if exists affil_program;
create table affil_program (
    a_id integer,
    p_id integer
);
drop table if exists leader;
create table leader (
    id integer primary key autoincrement,
    person_id integer,
    public_email text,
    url text,
    image text,
    biography text,
    l_order integer     -- can't use 'order'
);
drop table if exists leader_program;
create table leader_program (
    l_id integer,       -- leader id
    p_id integer        -- program id
);
drop table if exists rental;
create table rental (
    id          integer primary key autoincrement,
    name        text,
    title       text,
    subtitle    text,
    glnum       text,
    sdate       text,
    edate       text,
    url         text,
    webdesc     text,
    linked      text,
    phone       text,
    email       text,
    ceu         text,
    comment     text,
    housecost_id integer,
    n_single_bath     integer,
    n_single          integer,
    n_double_bath     integer,
    n_dble            integer,
    n_triple          integer,
    n_quad            integer,
    n_dormitory       integer,
    n_economy         integer,
    n_center_tent     integer,
    n_own_tent        integer,
    n_own_van         integer,
    n_commuting       integer,
    total_charge      integer
);
drop table if exists rental_payment;
create table rental_payment (
    id integer primary key autoincrement,
    rental_id integer,
    amount integer,
    type text,       -- cc, check, cash, online
    user_id integer,
    the_date text,
    time text
);
