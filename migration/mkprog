drop table if exists program;
create table program (
    id          integer primary key autoincrement,
    name        text,
    title       text,
    subtitle    text,
    glnum       text,
    housecost_id integer,
    retreat     text,
    sdate       text,
    edate       text,
    tuition     integer,
    confnote    text,
    url         text,
    webdesc     text,
    brdesc      text,
    webready    text,
    image       text,
    kayakalpa   text,
    canpol_id   integer,
    extradays   integer,
    full_tuition integer,
    deposit     integer,
    collect_total text,
    linked      text,
    unlinked_dir text,
    ptemplate   text,
    cl_template text,
    sbath       text,
    quad        text,
    economy     text,
    footnotes   text,
    reg_start   text,
    reg_end     text,
    prog_start  text,
    prog_end    text,
    reg_count   integer,
    lunches     text,
    -- for regi:
    school      integer,
    level       text,

    max         text,
    notify_on_reg text,
    summary_id  integer,
    rental_id   integer,
    do_not_compute_costs text,
    dncc_why    text,
    color       text
);
drop table if exists canpol;
create table canpol (
    id integer primary key autoincrement,
    name   text,
    policy text
);
drop table if exists housecost;
create table housecost (
    id              integer primary key autoincrement,
    name            text,
    single_bath     integer,
    single          integer,
    dble_bath       integer,
    dble            integer,
    triple          integer,
    quad            integer,
    dormitory       integer,
    economy         integer,
    center_tent     integer,
    own_tent        integer,
    own_van         integer,
    commuting       integer,
    type            text,
    inactive        text
);
drop table if exists affil_program;
create table affil_program (
    a_id integer,
    p_id integer
);
drop table if exists leader;
create table leader (
    id integer primary key autoincrement,
    person_id integer,
    public_email text,
    url text,
    image text,
    biography text,
    assistant text,
    l_order integer     -- can't use 'order'
);
drop table if exists leader_program;
create table leader_program (
    l_id integer,       -- leader id
    p_id integer        -- program id
);
drop table if exists program_cluster;
create table program_cluster (
    program_id integer,
    cluster_id integer,
    seq        integer  -- can't be 'order'
);
drop table if exists summary;
create table summary (
    id integer primary key autoincrement,
    date_updated text,
    time_updated text,
    who_updated integer,        -- foreign key to User
    gate_code text,
    registration_location text,
    signage text,
    orientation text,
    wind_up text,
    alongside text,
    back_to_back text,
    leader_name text,
    staff_arrival text,
    staff_departure text,
    leader_housing text,
    food_service text,
    flowers text,
    miscellaneous text,
    feedback text,
    field_staff_setup text,
    sound_setup text,
    check_list text,
    converted_spaces text
);
drop table if exists confnote;
create table confnote (
    id integer primary key autoincrement,
    abbr      text,
    expansion text
);
