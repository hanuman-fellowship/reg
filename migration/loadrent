#!/usr/bin/perl
use strict;
use warnings;
use DBI;
use lib "../lib";
use Date::Simple qw/date/;

my %save_rent;
open my $rent, "<", "rent/rent.txt";
while (<$rent>) {
    chomp;
    my ($name, @flds) = split m{\|};
    for my $f (@flds) {
        $f = "" unless defined $f;
    }
        # max, deposit, start, end
    $save_rent{$name} = \@flds;
}

my @seasons;
my $p = shift @ARGV;
if ($p ne 'cur') {
    while ($p ne 's08') {
        push @seasons, $p;
        if ($p =~ m{^s}) {
            $p =~ s{s}{f};
        }
        else {
            my ($yr) = $p =~ m{(\d+)};
            $yr = ($yr + 1) % 100;
            $p = 's' . sprintf("%02d", $yr);
        }
    }
}
push @seasons, 'cur';

my $dbh = DBI->connect(undef, "sahadev", "JonB")
    or die "oh no\n";
$dbh->do("delete from rental");

=comment
rname	YOGAWORKS          *
sdate	10/05/2007
edate	10/08/2007
title	                                                                           
subtitle	                                                                           
glnum	71012  
phone	                               
website	                                        
email	                                        
desc	-
.
linked	
=cut
my @fields = qw/
    id
    name
    title
    subtitle
    glnum
    sdate
    edate
    url
    webdesc
    linked
    phone
    email
    housecost_id
    lunches
    status
    summary_id
    max
    deposit
    start_hour
    end_hour
    mmc_does_reg
/;
my %lookup = qw/
    rname	name
    website	url
    desc	webdesc
/;

my $r_sql = "insert into rental ("
    . (join ",", @fields)
. ") values ("
    . (join ",", ("?") x @fields)
. ")";
my $r_sth = $dbh->prepare($r_sql) or die "no prep rental insert\n";
my $summary_sth = $dbh->prepare("insert into summary (id) values (?)");

my %hash;

my $next_summary_id;
open my $sum_id, "<", "summary_id.txt"
    or die "no summary_id.txt\n";
$next_summary_id = <$sum_id>;
chomp $next_summary_id;
close $sum_id;

for my $seas (@seasons) {
    print "rental $seas\n";
    open my $in, "<", "new/${seas}rent.txt"
        or die "no ${seas}rent: $!\n";
    %hash = ();
    while (<$in>) {
        s{\r?\n$}{};
        my ($k, $v) = split m{\t};
        $v =~ s{^\s*|\s*$}{}g;
        if ($v eq '-') {
            $v = "";
            LINE:
            while (<$in>) {
                s{\r?\n$}{};
                s{^\s*|\s*$}{}g;
                last LINE if m{^\.$};
                $v .= "$_\n";
            }
        }
        $k = $lookup{$k} || $k;
        $hash{$k} = $v;
        if ($k eq 'linked' && $hash{sdate}) {
            processRental($seas);
            %hash = ();
        }
    }
    close $in;
}
$r_sth = $summary_sth = undef;
$dbh->disconnect();

sub processRental {
    my ($season) = @_;

    for my $f (qw/ sdate edate /) {
        $hash{$f} =~ s{(..)/(..)/(....)}{$3$1$2}g;
        $hash{$f} =~ s{[/\s]}{}g;
    }
    my $ndays = date($hash{edate}) - date($hash{sdate}) + 1;
    $hash{lunches} = '0' x $ndays;
    $hash{id} = undef;      # next one that comes
    $hash{name} =~ s{\s*\*\s*$}{};      # used to be for CEUs
    #print "rental $season - $hash{name}\n";
    $hash{housecost_id} = 8;        # not the Default
    $hash{status} = "tentative";
    $hash{summary_id} = $next_summary_id;
    # saved data?
    if (exists $save_rent{$hash{name}}) {
        my ($max, $deposit, $start, $end) = @{$save_rent{$hash{name}}};
        $hash{max} = $max;
        $hash{deposit} = $deposit;
        $hash{start_hour} = $start;
        $hash{end_hour} = $end;
    }
    $hash{start_hour} ||= '4:00';
    $hash{end_hour} ||= '1:00';
    $hash{mmc_does_reg} = '';
    $summary_sth->execute($next_summary_id);
    ++$next_summary_id;
    $r_sth->execute(@hash{@fields});
}
